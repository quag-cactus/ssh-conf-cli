name: Release Drafter

on:
  push:
    # branches to consider in the event; optional, defaults to all
    branches:
      - main
  # pull_request event is required only for autolabeler
  pull_request:
    # Only following types are handled by the action, but one can default to all as well
    types: [opened, reopened, synchronize]
  # pull_request_target event is required for autolabeler to support PRs from forks
  # pull_request_target:
  #   types: [opened, reopened, synchronize]

permissions:
  contents: read

env:
  PROC_NAME: action-tester
  WIN_BUILD_NAME: win_x64
  LINUX_BUILD_NAME: linux_amd64
  BUILD_OPTION: -ldflags '-s -w' -trimpath

jobs:
  update_release_draft:
    permissions:
      # write permission is required to create a github release
      contents: write
      # write permission is required for autolabeler
      # otherwise, read permission is required at least
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      # Drafts next Release notes as Pull Requests are merged into "main"
      - uses: release-drafter/release-drafter@v5
        id: create-draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Make release-build
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Preparation for Build
        run: |
          mkdir -p bin/${{ env.WIN_BUILD_NAME }}/
          mkdir -p bin/${{ env.LINUX_BUILD_NAME }}/
  
      - name: Build for Windows
        run: |
          GOOS=windows GOARCH=amd64 go build -v ${{ env.BUILD_OPTION }}} -o bin/${{ env.WIN_BUILD_NAME }}/ ./...

      - name: Build for Linux
        run: |
          GOOS=linux GOARCH=amd64 go build -v ${{ env.BUILD_OPTION }}} -o bin/${{ env.WIN_BUILD_NAME }}/ ./... 

      - name: Zip for Windows
        working-directory: ./bin/${{ env.WIN_BUILD_NAME }}
        run: |
          zip -r ${{ env.PROC_NAME }}_${{ env.WIN_BUILD_NAME }}.zip ./*

      - name: Zip for Linux
        working-directory: ./bin/${{ env.LINUX_BUILD_NAME }}
        run: |
          zip -r ${{ env.PROC_NAME }}_${{ env.LINUX_BUILD_NAME }}.zip ./*
  
      - name: Upload Release Asset for Windows
        uses: shogo82148/actions-upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-draft.outputs.upload_url }}
          asset_path: ./bin/${{ env.WIN_BUILD_NAME }}/${{ env.PROC_NAME }}_${{ env.WIN_BUILD_NAME }}.zip
          asset_content_type: application/zip
          overwrite: true

      - name: Upload Release Asset for Linux
        uses: shogo82148/actions-upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-draft.outputs.upload_url }}
          asset_path: ./bin/${{ env.LINUX_BUILD_NAME }}/${{ env.PROC_NAME }}_${{ env.LINUX_BUILD_NAME }}.zip
          asset_content_type: application/zip
          overwrite: true